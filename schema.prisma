// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                     String      @id @default(cuid())
  name                   String      @default("")
  email                  String      @unique @default("")
  password               String?
  profileImage_id        String?
  profileImage_filesize  Int?
  profileImage_width     Int?
  profileImage_height    Int?
  profileImage_extension String?
  role                   String?     @default("viewer")
  videos                 Video[]     @relation("Video_author")
  audios                 AudioItem[] @relation("AudioItem_author")
  createdAt              DateTime?   @default(now())
}

model Video {
  id                    String     @id @default(cuid())
  title                 String     @default("")
  description           String     @default("")
  sourceType            String?    @default("youtube")
  youtubeUrl            String     @default("")
  embedCode             String     @default("")
  uploadedFile_filesize Int?
  uploadedFile_filename String?
  thumbnail_id          String?
  thumbnail_filesize    Int?
  thumbnail_width       Int?
  thumbnail_height      Int?
  thumbnail_extension   String?
  isPublic              Boolean    @default(true)
  categories            Category[] @relation("Category_videos")
  author                User?      @relation("Video_author", fields: [authorId], references: [id])
  authorId              String?    @map("author")
  createdAt             DateTime?  @default(now())

  @@index([authorId])
}

model Ad {
  id              String  @id @default(cuid())
  title           String  @default("")
  location        String?
  image_id        String?
  image_filesize  Int?
  image_width     Int?
  image_height    Int?
  image_extension String?
  link            String  @default("")
  isActive        Boolean @default(true)
}

model Category {
  id                        String      @id @default(cuid())
  name                      String      @default("")
  description               String      @default("")
  videos                    Video[]     @relation("Category_videos")
  from_AudioItem_categories AudioItem[] @relation("AudioItem_categories")
}

model AudioItem {
  id                    String     @id @default(cuid())
  title                 String     @default("")
  description           String     @default("")
  sourceType            String?    @default("url")
  audioUrl              String     @default("")
  uploadedFile_filesize Int?
  uploadedFile_filename String?
  coverImage_id         String?
  coverImage_filesize   Int?
  coverImage_width      Int?
  coverImage_height     Int?
  coverImage_extension  String?
  isPublic              Boolean    @default(true)
  categories            Category[] @relation("AudioItem_categories")
  audioType             String?    @default("podcast")
  author                User?      @relation("AudioItem_author", fields: [authorId], references: [id])
  authorId              String?    @map("author")
  createdAt             DateTime?  @default(now())

  @@index([authorId])
}
